cmake_minimum_required(VERSION 3.8)
#include(CTest) # We include CTest which is part of CMake


enable_testing()
# create the testing file and list of tests
create_test_sourcelist (Tests
	micro_tests.cpp
  alloc_dealloc_same_thread.cpp
  alloc_growing_size.cpp
  alloc_dealloc_separate_thread.cpp
  larson.cpp
  mstress.cpp
  rptest.cpp
  cache_scratch.cpp
  glibc_malloc_thread.cpp
  malloc_large.cpp
  xmalloc.cpp
  malloc_survey.cpp
  alloc_test.cpp
  heavy_threads.cpp
  )

# add the executable
add_executable (micro_tests micro_tests.cpp
  ../../benchs/alloc_dealloc_same_thread.cpp
  ../../benchs/alloc_growing_size.cpp
  ../../benchs/alloc_dealloc_separate_thread.cpp
  ../../benchs/larson.cpp
  ../../benchs/mstress.cpp
  ../../benchs/rptest.cpp
  ../../benchs/cache_scratch.cpp
  ../../benchs/glibc_malloc_thread.cpp
  ../../benchs/malloc_large.cpp
  ../../benchs/xmalloc.cpp
  ../../benchs/malloc_survey.cpp
  ../../benchs/alloc_test.cpp
  ../../benchs/heavy_threads.cpp)

set_property(TARGET micro_tests PROPERTY CXX_STANDARD 14)


if (WIN32 AND CMAKE_CXX_COMPILER_ID MATCHES "GNU")
	# mingw
	target_link_options(micro_tests PRIVATE -lKernel32 -lpsapi -lBcrypt -fopenmp)
elseif(UNIX AND (CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR CMAKE_CXX_COMPILER_ID MATCHES "GNU"))
    target_link_options(micro_tests PRIVATE  -lpthread -fopenmp)
endif()

# msvc warnings generated by micro_tests.cpp
if(WIN32)
	target_compile_definitions(micro_tests PRIVATE -D_CRT_SECURE_NO_WARNINGS)
endif()

if(MICRO_ENABLE_TIME_STATISTICS)
	target_compile_definitions(micro_tests PRIVATE -DMICRO_ENABLE_TIME_STATISTICS)
endif()
	
if(MICRO_ENABLE_ASSERT)
	target_compile_definitions(micro_tests PRIVATE -DMICRO_ENABLE_ASSERT)
endif()
	
if(MICRO_ZERO_MEMORY)
	target_compile_definitions(micro_tests PRIVATE -DMICRO_ZERO_MEMORY)
endif()
	
if(MICRO_NO_FILE_MAPPING)
	target_compile_definitions(micro_tests PRIVATE -DMICRO_NO_FILE_MAPPING)
endif()

target_compile_definitions(micro_tests PRIVATE -DMICRO_TEST_THREAD=8)
target_compile_definitions(micro_tests PRIVATE -DMICRO_TEST_SIZE=5000)

target_compile_definitions(micro_tests PRIVATE MICRO_MEMORY_LEVEL=${MICRO_MEMORY_LEVEL})


target_include_directories(micro_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(micro_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../..)
target_include_directories(micro_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../../benchs)

set_target_properties(micro_tests PROPERTIES INSTALL_RPATH "$ORIGIN")

# remove the test driver source file
set (TestsToRun ${Tests})
remove (TestsToRun micro_tests.cpp)

# Add all the ADD_TEST for each test
foreach (test ${TestsToRun})
  get_filename_component (TName ${test} NAME_WE)
  add_test (NAME ${TName} COMMAND micro_tests ${TName})
  message(STATUS "Add test ${TName} in micro_tests")
endforeach ()

install (TARGETS micro_tests RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} )
